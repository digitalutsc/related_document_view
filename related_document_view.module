<?php

/**
 * @file
 * Contains related_document_view.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function related_document_view_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the related_document_view module.
    case 'help.page.related_document_view':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('IIIF View for Related Document') . '</p>';
      return $output;

    default:
  }
}

/**
 * Overwrites the filter to select pages for the related document
 */
function related_document_view_views_pre_view($view, $display_id, array &$args) {
  if ($view->id() == "related_document_iiif_manifest") {
    $filters = $view->getHandlers('filter');

    $page = $args[1];
    $page_info = explode("|", $page);
    $field_name = $page_info[0];

    // Remove the first field info 
    array_shift($page_info);

    if ($field_name == "nid_range") {
      $filters["nid"] = $filters["field_pid_value"];
      $filters["nid"]["id"] = "nid";
      $filters["nid"]["field"] = "nid";
      $filters["nid"]["table"] = "node_field_data";
      $filters["nid"]["operator"] = "between";
      $between_op["min"] = "";
      $between_op["max"] = "";
      $between_op["value"] = "*";
      $filters["nid"]["value"] = $between_op;
      $filters["nid"]["entity_type"] = "node";
      $filters["nid"]["entity_field"] = "nid";
      $filters["nid"]["plugin_id"] = "numeric";
  
      unset($filters['field_pid_value']);
  
      $page_range_info = explode("-", $page_info[0]);
      if (count($page_range_info) === 2) {
        $filters["nid"]["value"]["min"] = trim($page_range_info[0]);
        $filters["nid"]["value"]["max"] = trim($page_range_info[1]);
      } else if (count($page_range_info) === 1) {
        $filters["nid"]["value"]["min"] = trim($page_range_info[0]);
      }
  
    // selected pages referenced the given field
    } else {

      foreach ($page_info as $key => $field_value) {
        $new_filter = $filters["field_pid_value"];
        $field_name_id = $field_name . "_value";
        if ($key > 0) {
            $field_name_id = $field_name . "_value_" . $key;
        }
        $new_filter["id"] = $field_name_id;
        $new_filter["value"] = $field_value;
        $new_filter["table"] = "node__" . $field_name;
        $new_filter["field"] = $field_name . "_value";
        $filters[$field_name_id] = $new_filter;
    
      }

      if ($field_name != "field_pid") {
        unset($filters['field_pid_value']);
      }
    }

    $view->display_handler->overrideOption('filters', $filters);
  }

}


function related_document_view_views_pre_render($view) {
  if (isset($view) && ($view->storage->id() == 'transcription_view' || $view->storage->id() == 'transcription_editable')) {
    $view->element['#attached']['library'][] = 'related_document_view/side_by_side';
  }
}

